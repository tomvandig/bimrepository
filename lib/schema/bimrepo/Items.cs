// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace bimrepo
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct Items : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static Items GetRootAsItems(ByteBuffer _bb) { return GetRootAsItems(_bb, new Items()); }
  public static Items GetRootAsItems(ByteBuffer _bb, Items obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public Items __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bimrepo.PropertyType Type { get { int o = __p.__offset(4); return o != 0 ? (bimrepo.PropertyType)__p.bb.GetSbyte(o + __p.bb_pos) : bimrepo.PropertyType.Int8; } }

  public static Offset<bimrepo.Items> CreateItems(FlatBufferBuilder builder,
      bimrepo.PropertyType type = bimrepo.PropertyType.Int8) {
    builder.StartTable(1);
    Items.AddType(builder, type);
    return Items.EndItems(builder);
  }

  public static void StartItems(FlatBufferBuilder builder) { builder.StartTable(1); }
  public static void AddType(FlatBufferBuilder builder, bimrepo.PropertyType type) { builder.AddSbyte(0, (sbyte)type, 1); }
  public static Offset<bimrepo.Items> EndItems(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<bimrepo.Items>(o);
  }
  public ItemsT UnPack() {
    var _o = new ItemsT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ItemsT _o) {
    _o.Type = this.Type;
  }
  public static Offset<bimrepo.Items> Pack(FlatBufferBuilder builder, ItemsT _o) {
    if (_o == null) return default(Offset<bimrepo.Items>);
    return CreateItems(
      builder,
      _o.Type);
  }
}

public class ItemsT
{
  public bimrepo.PropertyType Type { get; set; }

  public ItemsT() {
    this.Type = bimrepo.PropertyType.Int8;
  }
}


static public class ItemsVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Type*/, 1 /*bimrepo.PropertyType*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
