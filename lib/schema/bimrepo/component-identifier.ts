// automatically generated by the FlatBuffers compiler, do not modify

import * as flatbuffers from 'flatbuffers';

import { uuidv4, uuidv4T } from '../bimrepo/uuidv4.js';


export class ComponentIdentifier implements flatbuffers.IUnpackableObject<ComponentIdentifierT> {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):ComponentIdentifier {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsComponentIdentifier(bb:flatbuffers.ByteBuffer, obj?:ComponentIdentifier):ComponentIdentifier {
  return (obj || new ComponentIdentifier()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsComponentIdentifier(bb:flatbuffers.ByteBuffer, obj?:ComponentIdentifier):ComponentIdentifier {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new ComponentIdentifier()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

entity(obj?:uuidv4):uuidv4|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? (obj || new uuidv4()).__init(this.bb_pos + offset, this.bb!) : null;
}

componentType():number {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

componentIndex():number {
  const offset = this.bb!.__offset(this.bb_pos, 8);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

static startComponentIdentifier(builder:flatbuffers.Builder) {
  builder.startObject(3);
}

static addEntity(builder:flatbuffers.Builder, entityOffset:flatbuffers.Offset) {
  builder.addFieldStruct(0, entityOffset, 0);
}

static addComponentType(builder:flatbuffers.Builder, componentType:number) {
  builder.addFieldInt16(1, componentType, 0);
}

static addComponentIndex(builder:flatbuffers.Builder, componentIndex:number) {
  builder.addFieldInt16(2, componentIndex, 0);
}

static endComponentIdentifier(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createComponentIdentifier(builder:flatbuffers.Builder, entityOffset:flatbuffers.Offset, componentType:number, componentIndex:number):flatbuffers.Offset {
  ComponentIdentifier.startComponentIdentifier(builder);
  ComponentIdentifier.addEntity(builder, entityOffset);
  ComponentIdentifier.addComponentType(builder, componentType);
  ComponentIdentifier.addComponentIndex(builder, componentIndex);
  return ComponentIdentifier.endComponentIdentifier(builder);
}

unpack(): ComponentIdentifierT {
  return new ComponentIdentifierT(
    (this.entity() !== null ? this.entity()!.unpack() : null),
    this.componentType(),
    this.componentIndex()
  );
}


unpackTo(_o: ComponentIdentifierT): void {
  _o.entity = (this.entity() !== null ? this.entity()!.unpack() : null);
  _o.componentType = this.componentType();
  _o.componentIndex = this.componentIndex();
}
}

export class ComponentIdentifierT implements flatbuffers.IGeneratedObject {
constructor(
  public entity: uuidv4T|null = null,
  public componentType: number = 0,
  public componentIndex: number = 0
){}


pack(builder:flatbuffers.Builder): flatbuffers.Offset {
  return ComponentIdentifier.createComponentIdentifier(builder,
    (this.entity !== null ? this.entity!.pack(builder) : 0),
    this.componentType,
    this.componentIndex
  );
}
}
