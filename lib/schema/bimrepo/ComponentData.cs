// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace bimrepo
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct ComponentData : IFlatbufferObject
{
  private Table __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public static void ValidateVersion() { FlatBufferConstants.FLATBUFFERS_23_5_26(); }
  public static ComponentData GetRootAsComponentData(ByteBuffer _bb) { return GetRootAsComponentData(_bb, new ComponentData()); }
  public static ComponentData GetRootAsComponentData(ByteBuffer _bb, ComponentData obj) { return (obj.__assign(_bb.GetInt(_bb.Position) + _bb.Position, _bb)); }
  public void __init(int _i, ByteBuffer _bb) { __p = new Table(_i, _bb); }
  public ComponentData __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public bimrepo.ComponentDataType Type { get { int o = __p.__offset(4); return o != 0 ? (bimrepo.ComponentDataType)__p.bb.GetSbyte(o + __p.bb_pos) : bimrepo.ComponentDataType.Number; } }
  public int ArrayLength { get { int o = __p.__offset(6); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public int Num { get { int o = __p.__offset(8); return o != 0 ? __p.bb.GetInt(o + __p.bb_pos) : (int)0; } }
  public string Str { get { int o = __p.__offset(10); return o != 0 ? __p.__string(o + __p.bb_pos) : null; } }
#if ENABLE_SPAN_T
  public Span<byte> GetStrBytes() { return __p.__vector_as_span<byte>(10, 1); }
#else
  public ArraySegment<byte>? GetStrBytes() { return __p.__vector_as_arraysegment(10); }
#endif
  public byte[] GetStrArray() { return __p.__vector_as_array<byte>(10); }
  public bool Boolean { get { int o = __p.__offset(12); return o != 0 ? 0!=__p.bb.Get(o + __p.bb_pos) : (bool)false; } }

  public static Offset<bimrepo.ComponentData> CreateComponentData(FlatBufferBuilder builder,
      bimrepo.ComponentDataType type = bimrepo.ComponentDataType.Number,
      int array_length = 0,
      int num = 0,
      StringOffset strOffset = default(StringOffset),
      bool boolean = false) {
    builder.StartTable(5);
    ComponentData.AddStr(builder, strOffset);
    ComponentData.AddNum(builder, num);
    ComponentData.AddArrayLength(builder, array_length);
    ComponentData.AddBoolean(builder, boolean);
    ComponentData.AddType(builder, type);
    return ComponentData.EndComponentData(builder);
  }

  public static void StartComponentData(FlatBufferBuilder builder) { builder.StartTable(5); }
  public static void AddType(FlatBufferBuilder builder, bimrepo.ComponentDataType type) { builder.AddSbyte(0, (sbyte)type, 1); }
  public static void AddArrayLength(FlatBufferBuilder builder, int arrayLength) { builder.AddInt(1, arrayLength, 0); }
  public static void AddNum(FlatBufferBuilder builder, int num) { builder.AddInt(2, num, 0); }
  public static void AddStr(FlatBufferBuilder builder, StringOffset strOffset) { builder.AddOffset(3, strOffset.Value, 0); }
  public static void AddBoolean(FlatBufferBuilder builder, bool boolean) { builder.AddBool(4, boolean, false); }
  public static Offset<bimrepo.ComponentData> EndComponentData(FlatBufferBuilder builder) {
    int o = builder.EndTable();
    return new Offset<bimrepo.ComponentData>(o);
  }
  public ComponentDataT UnPack() {
    var _o = new ComponentDataT();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(ComponentDataT _o) {
    _o.Type = this.Type;
    _o.ArrayLength = this.ArrayLength;
    _o.Num = this.Num;
    _o.Str = this.Str;
    _o.Boolean = this.Boolean;
  }
  public static Offset<bimrepo.ComponentData> Pack(FlatBufferBuilder builder, ComponentDataT _o) {
    if (_o == null) return default(Offset<bimrepo.ComponentData>);
    var _str = _o.Str == null ? default(StringOffset) : builder.CreateString(_o.Str);
    return CreateComponentData(
      builder,
      _o.Type,
      _o.ArrayLength,
      _o.Num,
      _str,
      _o.Boolean);
  }
}

public class ComponentDataT
{
  public bimrepo.ComponentDataType Type { get; set; }
  public int ArrayLength { get; set; }
  public int Num { get; set; }
  public string Str { get; set; }
  public bool Boolean { get; set; }

  public ComponentDataT() {
    this.Type = bimrepo.ComponentDataType.Number;
    this.ArrayLength = 0;
    this.Num = 0;
    this.Str = null;
    this.Boolean = false;
  }
}


static public class ComponentDataVerify
{
  static public bool Verify(Google.FlatBuffers.Verifier verifier, uint tablePos)
  {
    return verifier.VerifyTableStart(tablePos)
      && verifier.VerifyField(tablePos, 4 /*Type*/, 1 /*bimrepo.ComponentDataType*/, 1, false)
      && verifier.VerifyField(tablePos, 6 /*ArrayLength*/, 4 /*int*/, 4, false)
      && verifier.VerifyField(tablePos, 8 /*Num*/, 4 /*int*/, 4, false)
      && verifier.VerifyString(tablePos, 10 /*Str*/, false)
      && verifier.VerifyField(tablePos, 12 /*Boolean*/, 1 /*bool*/, 1, false)
      && verifier.VerifyTableEnd(tablePos);
  }
}

}
