// <auto-generated>
//  automatically generated by the FlatBuffers compiler, do not modify
// </auto-generated>

namespace bimrepo
{

using global::System;
using global::System.Collections.Generic;
using global::Google.FlatBuffers;

public struct uuidv4 : IFlatbufferObject
{
  private Struct __p;
  public ByteBuffer ByteBuffer { get { return __p.bb; } }
  public void __init(int _i, ByteBuffer _bb) { __p = new Struct(_i, _bb); }
  public uuidv4 __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public byte Values(int j) { return __p.bb.Get(__p.bb_pos + 0 + j * 1); }

  public static Offset<bimrepo.uuidv4> Createuuidv4(FlatBufferBuilder builder, byte[] Values) {
    builder.Prep(1, 16);
    for (int _idx0 = 16; _idx0 > 0; _idx0--) {
      builder.PutByte(Values[_idx0-1]);
    }
    return new Offset<bimrepo.uuidv4>(builder.Offset);
  }
  public uuidv4T UnPack() {
    var _o = new uuidv4T();
    this.UnPackTo(_o);
    return _o;
  }
  public void UnPackTo(uuidv4T _o) {
    _o.Values = new byte[16];
    for (var _j = 0; _j < 16; ++_j) { _o.Values[_j] = this.Values(_j); }
  }
  public static Offset<bimrepo.uuidv4> Pack(FlatBufferBuilder builder, uuidv4T _o) {
    if (_o == null) return default(Offset<bimrepo.uuidv4>);
    var _values = _o.Values;
    return Createuuidv4(
      builder,
      _values);
  }
}

public class uuidv4T
{
  public byte[] Values { get; set; }

  public uuidv4T() {
    this.Values = new byte[16];
  }
}


}
