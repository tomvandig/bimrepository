
namespace bimrepo;

enum ComponentDataType: byte { 
    Int8 = 1,
    Int16, 
    Int32, 
    Int64,
    Uint8,
    Uint16, 
    Uint32, 
    Uint64,
    Float32,
    Float64,
    Blob,
    String, 
    Boolean, 
    ArrayStart, 
    ArrayEnd, 
    Ref, 
    Empty
}

struct uuidv4
{
    values: [uint8:16];
}

table ComponentIdentifier
{
    entity: uuidv4;
    type_hash: string;
    component_index: uint16;
}

// fb guarantees you don't pay (much) for unset table members
table ComponentData
{
    type: ComponentDataType = Int32;
    array_length: int32;
    
    blob: [uint8];

    uint8: uint8;
    uint16: uint16;
    uint32: uint32;
    uint64: uint64;

    int8: int8;
    int16: int16;
    int32: int32;
    int64: int64;
    
    float32: float32;
    float64: float64;

    str: string;
    boolean: bool;
    ref: ComponentIdentifier;
}

table Component {
    id: ComponentIdentifier;
    data: [ComponentData];
}

root_type Component;